# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  desc "Submit a new Beta Build to Google play Beta"
  lane :beta do

  name = UI.input("Enter Release name? ")
  tag = UI.input("Enter Github tag? ")
  is_draft = UI.input("is this a draft in github?  1.true  2.false")

  #increment Version
  increment_version_code

  #get Version Code
  path = '../app/build.gradle'
  re = /versionCode\s+(\d+)/
  s = File.read(path)
  version = s[re, 1].to_i

  #build
  gradle(
  task: 'assemble',
  build_type: 'Release'
  )

  #release notes
  create_changelog

  #Commit Version Code bump
  git_commit(
  path: ".",
  message: "Version Bump to - #{version}"
  )

  #Push changes to git remote
  push_to_git_remote

  #draft release to github
  draft_release(name:name,tag:tag,is_draft:is_draft)

  #upload
  upload_to_play_store(track: 'beta')

  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end

  desc "Creates Changelog from PR titles and writes to Changelog.txt"
    desc "Usage:"
    desc "    fastlane android create_changelog"
    desc "or"
    desc "    fastlane android create_changelog since_tag:v1.0.0"
    private_lane :create_changelog do
      path = '../app/build.gradle'
      re = /versionCode\s+(\d+)/
      s = File.read(path)
      version = s[re, 1].to_i
      tag = last_git_tag
      changelog = "What's new in AutoVision #{version}\n\n"
      changelog += sh "git log --oneline --decorate --merges  --grep=\"^Merge pull\" --format=\"* %s %b\" #{tag}.. | cut -d' ' -f1,5,8-"
      File.open("../Changelog.txt", "w") { |file| file.write(changelog) }
      git_commit(
        path: "Changelog.txt",
        message: "Update Changelog for #{version}"
      )
    end

  desc "Draft Release in github"
    private_lane :draft_release do |options|
      name = options[:name]
      tag=options[:tag]
      is_draft=options[:is_draft]

      set_github_release(
        repository_name: "deeppandya/AppManager",
        api_token: ENV["GITHUB_TOKEN"],
        name: name,
        tag_name: tag,
        description: (File.read("../Changelog.txt") rescue "No changelog provided"),
        is_draft: is_draft
      )
    end

end

